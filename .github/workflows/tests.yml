name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libopenmpi-dev python3-dev cmake libgmp-dev \
            build-essential gcc g++ gfortran make \
            libmpfr-dev libmpc-dev libblas-dev liblapack-dev

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11.7'
          architecture: 'x64'
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          poetry install --with mpi --extras mpi --no-interaction
          poetry env info

      - name: Run tests and checks
        run: |
          poetry run pytest
          poetry run black . --check
          poetry run isort . --check
          poetry run flake8 .
    steps:
      - uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository universe
          sudo apt-get update
          sudo apt-get install -y \
            libopenmpi-dev python3-dev cmake libgmp-dev \
            build-essential gcc g++ gfortran make \
            libmpfr-dev libmpc-dev libblas-dev liblapack-dev \
            python3-pip
          python3 -m pip install --user symengine

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11.7'
          architecture: 'x64'
          cache: 'pip'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: |
          python -m pip install --upgrade "pip==23.3.1" "setuptools==69.0.3" wheel
          poetry config virtualenvs.create false
          poetry install --with mpi --extras mpi --no-interaction --no-ansi --no-cache
          python -V

      - name: Run tests
        run: |
          poetry run pytest

      - name: Check formatting
        run: |
          poetry run black . --check
          poetry run isort . --check
          poetry run flake8 .
