[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"  # Override PyPI for Torch

[tool.poetry]
name = "em-sim"
version = "0.1.0"
description = "Electromagnetic Epistemic Modeling Framework - A framework for electromagnetic consciousness simulation"
authors = ["Kevin Kull (KVNAI - Kuonirad)"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
numpy = "1.26.3"
scipy = "1.12.0"
symengine = "^0.11.0"
torch = { version = ">=2.2,<2.3", python = "<3.12" }  # CPU-only version
matplotlib = "^3.8.2"
pyquil = { version = ">=4.8.1,<5.0" }
qiskit-terra = "0.46.2"  # Critical for MPI compatibility
qiskit-aer = { version = "0.13.0", extras = ["mpi"] }  # Required for quantum simulation with MPI support
qiskit-algorithms = "0.3.1"  # Match Qiskit 1.0.x requirements

[tool.poetry.group.quantum]
optional = true

[tool.poetry.group.quantum.dependencies]
qiskit = "1.4.0"
qiskit-aer = {version = "0.13.0", extras = ["mpi"]}

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
h5py = ">=3.11.0"  # Required for FDTD solver
mpi4py = { version = "3.1.5", markers = "sys_platform != 'win32'" }  # Required for field solver

[tool.poetry.group.mpi]
optional = true

[tool.poetry.group.mpi.dependencies]
qutip = { version = "^5.1.1" }
cupy-cuda12x = { version = "^13.3.0" }

[tool.poetry.extras]
mpi = ["mpi4py", "qutip", "cupy-cuda12x", "h5py", "qiskit", "qiskit-terra", "qiskit-nature", "qiskit-aer", "qiskit-algorithms"]

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.3.4"
pytest-cov = "^6.0.0"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
black = "^25.1.0"
isort = "^6.0.0"
flake8 = "^7.1.1"
pre-commit = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
target-version = ["py38"]
include = "\\.pyi?$"
exclude = '''
/(
    \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.tox
  | \\.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120  # Match black's line length
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["**/venv/**", "**/.venv/**", "**/build/**", "**/dist/**"]
known_first_party = ["em_sim"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
combine_as_imports = true
force_sort_within_sections = true
